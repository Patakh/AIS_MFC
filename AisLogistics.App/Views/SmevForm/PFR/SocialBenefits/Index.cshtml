@using SmevRouter
@model AisLogistics.App.ViewModels.Cases.SmevCreateResponseModel
@{
    var applicants = Model.GetApplicants();
    var request = new GetSocialBenefitsRequestData
            {
                Fio = new()
            };
}

<style>
    #smev-data-form-content .applicants + span .select2-selection.select2-selection--single {
        background-color: #e5edfc !important;
    }
</style>

<div class="container m-0 p-0" id="smev_request">
    <div class="row g-3">
        <div class="col-12 col-lg-10 mx-auto">
            <div class="divider text-start">
                <div class="divider-text fs-5 b-s-16">Персональные данные</div>
            </div>
        </div>
    </div>
    <div class="row justify-content-center g-3" data-person>
        <div class="col-10">
            <label class="form-label">Заявители</label>
            <select class="form-select select2-nosearch applicants">
                <option value="">Выберите заявителя</option>
                @for (int i = 0; i < applicants.Count; i++)
                {
                    <option value="@i">@applicants[i].LastName @applicants[i].FirstName @applicants[i].SecondName</option>
                }
            </select>
        </div>
        <div class="col-12 col-lg-8">
            <div class="row mb-3">
                <div class="col-4">
                    <label class="form-label" asp-for="@request.Fio.LastName">Фамилия</label>
                    <input type="text" class="form-control required" placeholder="Фамилия" asp-for="@request.Fio.LastName" />
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="@request.Fio.FirstName">Имя</label>
                    <input type="text" class="form-control required" placeholder="Имя" asp-for="@request.Fio.FirstName">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="@request.Fio.SecondName">Отчество</label>
                    <input type="text" class="form-control" placeholder="Отчество" asp-for="@request.Fio.SecondName">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-4">
                    <label class="form-label" asp-for="@request.BirthDate">Дата рождения</label>
                    <div class="input-group input-group-merge">
                        <span class="input-group-text"><i class="bi bi-calendar3"></i></span>
                        <input asp-for="@request.BirthDate" type="text" class="form-control pickadate required" placeholder="Дата рождения" value="">
                    </div>
                </div>
                <div class="col-4">
                    <label class="d-block form-label mb-3">Пол</label>
                    <div class="form-check form-check-inline mx-0">
                        <input class="form-check-input" type="radio" asp-for="@request.Gender" id="smevModel0_Gender1" value="0">
                        <label class="form-check-label" for="smevModel0_Gender1"><i class="bi bi-gender-male fs-6"></i>Мужской</label>
                    </div>
                    <div class="form-check form-check-inline mx-0">
                        <input class="form-check-input" type="radio" asp-for="@request.Gender" id="smevModel0_Gender2" value="1">
                        <label class="form-check-label" for="smevModel0_Gender2"><i class="bi bi-gender-female fs-6"></i>Женский</label>
                    </div>
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="@request.Snils">СНИЛС</label>
                    <input type="text" class="form-control snils required" placeholder="СНИЛС" asp-for="@request.Snils" />
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var applicants = @Json.Serialize(applicants);
    var $formContent = $("#smev-data-form-content");
    var smevForm = {
        init: () => {
            select2Init($formContent);
            $('#cloneList').find('.required').each(function () {
                addValidation($(this));
            });

            $formContent.find(".pickadate").datepicker({
                language: "ru",
                autoclose: true
            });
            
            var maskOptions = { clearIncomplete: true, showMaskOnHover: false };
            $formContent.find(".snils").inputmask("9{3}-9{3}-9{3} 9{2}", maskOptions);
            $formContent.find(".pickadate").inputmask("99.99.9999", maskOptions);
            $formContent.find('.applicants').val('0').trigger('change');
        }
    };

    function ShowErrorInputs() {
    }

    $('select.applicants').each(function () {
        $(this).on('change',
            function () {
                let customerId = $(this).val();
                let $block = $(this).closest('[data-person]');
                $block.find('[type="text"]').each(function () {
                    $(this).val('');
                });
                if (customerId) {
                    let $block = $(this).closest('[data-person]');
                    $block.find('[name$="LastName"]').val(applicants[customerId].lastName);
                    $block.find('[name$="FirstName"]').val(applicants[customerId].firstName);
                    $block.find('[name$="SecondName"]').val(applicants[customerId].secondName);
                    $block.find('[name$="BirthDate"]').val(applicants[customerId].birthDate ? new Date(applicants[customerId].birthDate).toLocaleDateString() : '');
                    $block.find('[name$="Snils"]').val(applicants[customerId].snils);

                    switch (applicants[customerId].gender) {
                    case 1:
                        $block.find('[id$="Gender1"]').prop('checked', true);
                        break;
                    case 2:
                        $block.find('[id$="Gender2"]').prop('checked', true);
                        break;
                    }
                }
            });
    });

    function addValidation($el) {
        SmevDataFormValidation.addField($el.attr('name'),
            {
                validators: {
                    notEmpty: {}
                }
            });
        SmevDataFormValidation.elements[$el.attr('name')] = [$el[0]];
        $el.addClass('required');
    }

    function removeValidation($el) {
        if ($el.attr('name') in SmevDataFormValidation.fields) {
            SmevDataFormValidation.removeField($el.attr('name'));
        }
    }
</script>
