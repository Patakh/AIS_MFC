@model _1_DepartureSpecialistsModel
@{
    IEnumerable<SelectListItem> reasonType = new List<SelectListItem> {
         new ("инвалид I и II групп", "инвалид I и II групп"),
         new ("ветеран Великой Отечественной войны", "ветеран Великой Отечественной войны"),
         new ("инвалид Великой Отечественной войны", "инвалид Великой Отечественной войны"),
         new ("родители (опекунам, попечителям) ребенка-инвалида", "родители (опекунам, попечителям) ребенка-инвалида"),
         new ("герой Советского Союза, героям Российской Федерации, полным кавалерам ордена Славы, кавалерам ордена Мужества", "герой Советского Союза, героям Российской Федерации, полным кавалерам ордена Славы, кавалерам ордена Мужества"),
         new ("герои Социалистического Труда, героям Труда Российской Федерации", "герои Социалистического Труда, героям Труда Российской Федерации"),
         new ("граждане, достигшим 80-летнего возраста", "граждане, достигшим 80-летнего возраста"),
         new ("тяжелобольные граждане", "тяжелобольные граждане"),
         new ("- (прочерк)", "- (прочерк)"),
    };
}

<div id="additional-data-content">
    <div class="row g-3">
        <div class="col-8 mx-auto">
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="Service">Прошу Вас оказать услугу:</label>
                    <input type="text" asp-for="Service" class="form-control">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="Address">с выездом на дом по адресу:</label>
                    <input type="text" asp-for="Address" class="form-control">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="ClienteFIO">ФИО клиента</label>
                    <input type="text" asp-for="ClienteFIO" class="form-control">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label title" asp-for="Reasons">Причина</label>
                    <select class="form-select select2-nosearch" asp-for="Reasons" asp-items="@reasonType"></select>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="RightDocumentName">Наименование подтверждающего документа</label>
                    <input type="text" asp-for="RightDocumentName" class="form-control">
                </div>
            </div>
        </div>
    </div>
</div>



<script>
    var additionalForm = $('#additional-data-content');
    var originalBlock = $('#originalBlock');

    $(function () {

        originalBlock.find('[data-original]').each(function (_, item) {
            renameBlock($(item), 100, true);
            visibilityBlock($(item), true, true);
        });

        additionalForm.find("select.select2-search").each(function () {
            $(this).select2({
                //dropdownParent: $("#mainModal"),
            });
        });

        additionalForm.find('select.select2-nosearch').each(function () {
            $(this).select2({
                minimumResultsForSearch: Infinity,
            })

        });

        let options = { clearIncomplete: true, showMaskOnHover: false };

        additionalForm.find(".pickdate").datepicker({
            language: "ru",
            autoclose: true
        }).inputmask("99.99.9999", options);

        additionalForm.find('#addAppliedDocument').on('click', () => addForm('appliedDocumentList', 'appliedDocument'));
        
        additionalForm.find('[data-disabled]').each(function () {
            visibilityBlock($(this), true, true);
        });

        function addForm(cloneListId, originalId) { //Динамическое добавление Принимает (Куда Откуда)
            let $cloneList = additionalForm.find(`#${cloneListId}`);
            let $original = originalBlock.find(`#${originalId}`);
            let $cloneBlock = $original.clone(true);
            let indexId = $cloneList.find('[data-clone]').length;
            renameBlock($cloneBlock, indexId);
            blockInit($cloneBlock);
            $cloneList.append($cloneBlock);
        }

        function blockInit($block) {
            visibilityBlock($block, false, false);

            $block.find("input").each(function () {
                $(this).val("");
            });
            $block.find('select.select2-nosearch').each(function () {
                $(this).select2({
                    minimumResultsForSearch: Infinity,
                })
            });
        }
    });

    function renameBlock($cloneBlock, indexId, initOriginal = false) {
        if (!initOriginal) {
            $cloneBlock.find('.title').text($cloneBlock.find('.title').text().replace(/\d+/, indexId + 1));
            $cloneBlock.attr("id", `${$cloneBlock.attr("id")}${indexId}`);
            $cloneBlock.attr('data-id', indexId);
            $cloneBlock.attr('data-clone', '');
            $cloneBlock.removeAttr('data-original');
        }

        $cloneBlock.find('input, select, div').each(function () {
            $(this).attr('id', $(this).attr('id')?.replace(/\d+/, indexId));
            if ($(this).is('[name]')) {
                $(this).attr('name', $(this).attr('name').replace(/\d+/, indexId));
            }
        });

        $cloneBlock.find('label').each(function () {
            $(this).attr('for', $(this).attr('for').replace(/\d+/, indexId));
        });
    }

    function blockRemove(el) {
        let $cloneList = $(el).closest('[data-clone-list]');
        el.closest('[data-clone]').remove();
        $cloneList.find('[data-clone]').each(function (index, item) {
            renameBlock($(item), index);
        });
    }

    function visibilityBlock($block, hide, isDisabled) {
        switch (hide) {
            case true:
                $block.hide();
                break;
            case false:
                $block.show();
                break;
        }

        switch (isDisabled) {
            case true:
                $block.find('input, select').each(function () {
                    $(this).prop('disabled', true);
                });
                break;
            case false:
                $block.find('input, select').each(function () {
                    $(this).prop('disabled', false);
                });
                $block.find('[data-disabled]').each(function () {
                    visibilityBlock($(this), true, true);
                });
                break;
        }
    }
</script>


