@model _IndividualPersonalAccountsModel

<div id="additional-data-content">
    <div class="row g-3">
        <div class="col-8 mx-auto">
            <h6 class="my-2">Прошу предоставить сведения о состоянии моего индивидуального лицевого счета:</h6>
            <div class="row mb-3">
                <div class="col-12">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" asp-for="GeneralIndividualPersonalAccount">
                        <label class="form-check-label" asp-for="GeneralIndividualPersonalAccount">общей части индивидуального лицевого счета</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" asp-for="SpecialIndividualPersonalAccount">
                        <label class="form-check-label" asp-for="SpecialIndividualPersonalAccount">специальной части индивидуального лицевого счета</label>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var additionalForm = $('#additional-data-content');

    $(function () {
        let options = { clearIncomplete: true, showMaskOnHover: false };

        additionalForm.find(".pickdate").datepicker({
            language: "ru",
            autoclose: true
        }).inputmask("99.99.9999", options);

        togleFields()

    });

    additionalForm.find('[type="radio"], input[type="checkbox"]').on('click', function () {
        togleFields();
    });


    additionalForm.find("#TypePayment_TypeSixteen").on('click', function () {
        togleFields();
    });

    function togleFields() {
        additionalForm.find('[checkBlock] input[type="radio"], [checkBlock] input[type="checkbox"]').each(function () {
            let $block = $(this).closest('[checkBlock]');

            if ($(this).is(':checked')) {
                visibilityBlock($block.find('[checkBlockBody]'), false, false);
            } else {
                visibilityBlock($block.find('[checkBlockBody]'), true, true);
            }
        })
    }

    function visibilityBlock($block, hide, isDisabled) {
        switch (hide) {
            case true:
                $block.hide();
                break;
            case false:
                $block.show();
                break;
        }

        switch (isDisabled) {
            case true:
                $block.find('input, select').each(function () {
                    $(this).prop('disabled', true);
                });
                break;
            case false:
                $block.find('input, select').each(function () {
                    $(this).prop('disabled', false);
                });
                $block.find('[data-disabled]').each(function () {
                    visibilityBlock($(this), true, true);
                });
                break;
        }
    }

</script>