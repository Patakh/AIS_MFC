@model _39_ProvisionInformationEnforcementProceedingsModel

<div id="additional-data-content">
    <div class="row g-3">
        <div class="col-8 mx-auto">
            <div>Вид заявления</div>
            <div class="col-12">
                <div class="form-check" checkBlock>
                    <input asp-for="TypeApplicant" id="TypeOfApplication1" class="form-check-input" type="radio" value="1">
                    <label for="TypeApplicant" class="form-check-label">Заявление о предоставлении информации о наличии исполнительного производства</label>
                </div>
            </div>
            <div class="col-12">
                <div class="form-check" checkBlock>
                    <input asp-for="TypeApplicant" id="TypeOfApplication2" class="form-check-input" type="radio" value="2">
                    <label for="TypeApplicant" class="form-check-label">Заявление о предоставлении информации о ходе исполнительного производства</label>
                </div>
            </div>
            <div class="col-12">
                <label class="form-label" asp-for="EnforcementProceeding">Номер испольнительного производства</label>
                <input type="text" class="form-control" asp-for="EnforcementProceeding">
            </div>
            <div class="col-12">
                <div class="form-check" checkBlock>
                    <input asp-for="WhoIs" id="WhoIs1" class="form-check-input" type="radio" value="1">
                    <label for="WhoIs1" class="form-check-label">Являюсь должником</label>
                </div>
            </div>
            <div class="col-12">
                <div class="form-check" checkBlock>
                    <input asp-for="WhoIs" id="WhoIs2" class="form-check-input" type="radio" value="2">
                    <label for="WhoIs2" class="form-check-label">Являюсь взыскателем</label>
                </div>
            </div>
            <div class="col-12">
                <div class="form-check" checkBlock>
                    <input asp-for="WhoIs" id="WhoIs3" class="form-check-input" type="radio" value="3">
                    <label for="WhoIs3" class="form-check-label">Являюсь представителем должника</label>
                </div>
            </div>
            <div class="col-12">
                <div class="form-check" checkBlock>
                    <input asp-for="WhoIs" id="WhoIs4" class="form-check-input" type="radio" value="4">
                    <label for="WhoIs4" class="form-check-label">Являюсь представителем взыскателя</label>
                </div>
            </div>
            <br />

            <div>Способ получения результата оказания государственной услуги:</div>
            <div class="form-check" checkBlock>
                <input asp-for="WayGetResult" id="WayGetResult1" class="form-check-input" type="radio" value="1">
                <label for="WayGetResult1" class="form-check-label">Лично</label>
            </div>
            <div class="form-check" checkBlock>
                <input asp-for="WayGetResult" id="WayGetResult2" class="form-check-input" type="radio" value="2">
                <label for="WayGetResult2" class="form-check-label">Постредством почтовой связи</label>

                <div class="ms-3 ps-4" checkBlockBody>
                    <div class="col-12">
                        <label class="form-label" asp-for="MailAddress">Почтовый адрес:</label>
                        <input type="text" class="form-control" asp-for="MailAddress">
                    </div>
                </div>
            </div>
            <br />

            <div>Согласие на оценку качества предоставленной государственной услуги:</div>
            <div class="col-12" checkBlock>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" asp-for="ConsentToQualityAssessment">
                    <label class="form-check-label" asp-for="ConsentToQualityAssessment">Да</label>
                </div>
                <div class="row mb-3" checkBlockBody>
                    <div class="col-12 ps-5">
                        <label class="form-label" asp-for="PhoneNumber">Номер мобильного телефона</label>
                        <input asp-for="PhoneNumber" type="text" class="form-control">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    var additionalForm = $('#additional-data-content');
    var originalBlock = $('#originalBlock');

    $(function () {

        originalBlock.find('[data-original]').each(function (_, item) {
            renameBlock($(item), 100, true);
            visibilityBlock($(item), true, true);
        });

        additionalForm.find("select.select2-search").each(function () {
            $(this).select2({
                //dropdownParent: $("#mainModal"),
            });
        });

        additionalForm.find('select.select2-nosearch').each(function () {
            $(this).select2({
                minimumResultsForSearch: Infinity,
            })

        });
        
        togleFields();

        if ($('.btn-next')) {

            $('.btn-next').on('click', function () {
                let gender = $('[name="customer.CustomerGender"]').val() == 1 ? 'm' : 'f';
                let lastName = $("#customer_LastName").val().trim();
                let firstName = $("#customer_FirstName").val().trim();
                let secondName = $("#customer_SecondName").val().trim();

                var rn = new RussianName(lastName, firstName, secondName, gender);

                additionalForm.find("#FioGenitiveCase").val(rn.fullName(rn.gcaseGen));
            })
        }

        let options = { clearIncomplete: true, showMaskOnHover: false };

        additionalForm.find(".pickdate").datepicker({
            language: "ru",
            autoclose: true
        }).inputmask("99.99.9999", options);

        additionalForm.find('#addAppliedDocument').on('click', () => addForm('appliedDocumentList', 'appliedDocument'));

        additionalForm.find('[data-disabled]').each(function () {
            visibilityBlock($(this), true, true);
        });

        additionalForm.find('[type="radio"], input[type="checkbox"]').on('click', function () {
            togleFields();
        });
        function togleFields() {
            additionalForm.find('[checkBlock] input[type="radio"], [checkBlock] input[type="checkbox"]').each(function () {
                let $block = $(this).closest('[checkBlock]');

                if ($(this).is(':checked')) {
                    visibilityBlock($block.find('[checkBlockBody]'), false, false);
                } else {
                    visibilityBlock($block.find('[checkBlockBody]'), true, true);
                }
            })
        }

        function addForm(cloneListId, originalId) { //Динамическое добавление Принимает (Куда Откуда)
            let $cloneList = additionalForm.find(`#${cloneListId}`);
            let $original = originalBlock.find(`#${originalId}`);
            let $cloneBlock = $original.clone(true);
            let indexId = $cloneList.find('[data-clone]').length;
            renameBlock($cloneBlock, indexId);
            blockInit($cloneBlock);
            $cloneList.append($cloneBlock);
        }

        function blockInit($block) {
            visibilityBlock($block, false, false);

            $block.find("input").each(function () {
                $(this).val("");
            });
            $block.find('select.select2-nosearch').each(function () {
                $(this).select2({
                    minimumResultsForSearch: Infinity,
                })
            });
        }
    });

    function renameBlock($cloneBlock, indexId, initOriginal = false) {
        if (!initOriginal) {
            $cloneBlock.find('.title').text($cloneBlock.find('.title').text().replace(/\d+/, indexId + 1));
            $cloneBlock.attr("id", `${$cloneBlock.attr("id")}${indexId}`);
            $cloneBlock.attr('data-id', indexId);
            $cloneBlock.attr('data-clone', '');
            $cloneBlock.removeAttr('data-original');
        }

        $cloneBlock.find('input, select, div').each(function () {
            $(this).attr('id', $(this).attr('id')?.replace(/\d+/, indexId));
            if ($(this).is('[name]')) {
                $(this).attr('name', $(this).attr('name').replace(/\d+/, indexId));
            }
        });

        $cloneBlock.find('label').each(function () {
            $(this).attr('for', $(this).attr('for').replace(/\d+/, indexId));
        });
    }

    function blockRemove(el) {
        let $cloneList = $(el).closest('[data-clone-list]');
        el.closest('[data-clone]').remove();
        $cloneList.find('[data-clone]').each(function (index, item) {
            renameBlock($(item), index);
        });
    }

    function visibilityBlock($block, hide, isDisabled) {
        switch (hide) {
            case true:
                $block.hide();
                break;
            case false:
                $block.show();
                break;
        }

        switch (isDisabled) {
            case true:
                $block.find('input, select').each(function () {
                    $(this).prop('disabled', true);
                });
                break;
            case false:
                $block.find('input, select').each(function () {
                    $(this).prop('disabled', false);
                });
                $block.find('[data-disabled]').each(function () {
                    visibilityBlock($(this), true, true);
                });
                break;
        }
    }

</script>
