@model _44_1_PfrAdv1Model

<div id="additional-data-content">
    <div class="row g-3 justify-content-center">
        <div class="col-sm-8">
            <div class="row">
                <div class="col-sm-4">
                    <label class="form-label" asp-for="CitizenshipCountry">Гражданство</label>
                    <select class="select2-search" asp-for="CitizenshipCountry" data-value-value
                            data-dictionary='{"dictionary":"OksmCodes", "default_value":"@(string.IsNullOrEmpty(Model.CitizenshipCountry) ?  "Россия" : Model.CitizenshipCountry)"}'>
                    </select>
                </div>
            </div>
            <br />

            <h5 class="my-2">Актовая запись о рождении</h5>
            <div class="row">
                <div class="col-sm-12">
                    <label class="form-label" asp-for="BirthAct!.ZagsName">Наименование ЗАГС</label>
                    <select class="form-select select2-search" asp-for="BirthAct!.ZagsName" data-value-value
                            data-zags-dictionary='{"dictionary":"ZagsSdrags", "default_value":"@(Model.BirthAct  == null || string.IsNullOrEmpty(Model.BirthAct.ZagsName) ?  "" : Model.BirthAct.ZagsName)"}'>
                    </select>
                </div>
                <div class="col-sm-4">
                    <label class="form-label" asp-for="BirthAct!.BirthActNumber">Номер</label>
                    <input type="text" class="form-control" asp-for="BirthAct!.BirthActNumber">
                </div>
                <div class="col-sm-4">
                    <label class="form-label" asp-for="BirthAct!.BirthActDate">Дата</label>
                    <div class="input-group input-group-merge">
                        <span class="input-group-text">
                            <i class="bi bi-calendar3"></i>
                        </span>
                        <input asp-for="BirthAct!.BirthActDate" type="text" class="form-control pickdate">
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-sm-12">
                    <label class="form-label" asp-for="OKUDCode">Код по ОКУД</label>
                    <input type="text" class="form-control" asp-for="OKUDCode">
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    var additionalForm = $('#additional-data-content');

    var regionCode = @Json.Serialize(Options.Value.Region);

    $(function () {
        additionalForm.find("select.select2-search").each(function () {
            $(this).select2({
                //dropdownParent: $("#mainModal"),
            });
        });

        additionalForm.find('select.select2-nosearch').each(function () {
            $(this).select2({
                minimumResultsForSearch: Infinity,
            })
        });

        // скрытие блоков
        additionalForm.find('[data-disabled]').each(function () {
            visibilityBlock($(this), true, true);
        });

        let options = { clearIncomplete: true, showMaskOnHover: false };

        additionalForm.find(".pickdate").datepicker({
            language: "ru",
            autoclose: true
        }).inputmask("99.99.9999", options);

        getDictionaries();
    });
     
    (function getDictionariesZags() {
        let dicts = new Set();
        $('[data-zags-dictionary]').each(function () {
            let $this = $(this);
            let options = $this.data('zags-dictionary');
            if (!dicts.has(options.dictionary)) {
                dicts.add(options.dictionary);
                $.post('/SmevPfr/GetZags', null,
                    function (dictionary) {
                        if (dictionary.error) return;
                        dictionary.sort((prev, next) => {
                            if (next.code.startsWith(`R${regionCode}`)) {
                                return 1;
                            } else return -1;
                        });

                        fillSelectZags(options.dictionary, dictionary);
                    });
            }
        });
    }());

    function fillSelectZags(dictName, dictionary) {
        $.each($(`[data-zags-dictionary*='"${dictName}"']`),
            function () {
                let $this = $(this);
                let items = dictionary;

                $this.empty();
                if (!$this.hasClass('required')) {
                    $this.append(new Option('Не выбрано', ''));
                }
                if ($this.is('[data-value-value]')) {
                    items.forEach(function (item) {
                        $this.append(new Option(item.name, item.name));
                    });
                } else {
                    items.forEach(function (item) {
                        $this.append(new Option(item.name, item.id));
                    });
                }

                if ($this.data('zags-dictionary').default_value) {
                    let defVal = $this.data('zags-dictionary').default_value;
                    if (defVal) {
                        $this.val(defVal).trigger('update');
                        $this.attr('data-def', defVal);
                    }
                } else {
                    $this.val('').trigger('update');
                }
            });
    }
     
    var options = { clearIncomplete: true, showMaskOnHover: false };
     
    function visibilityBlock($block, hide, isDisabled) {
        switch (hide) {
            case true:
                $block.hide();
                break;
            case false:
                $block.show();
                break;
        }

        switch (isDisabled) {
            case true:
                $block.find('input, select').each(function () {
                    $(this).prop('disabled', true);
                });
                break;
            case false:
                $block.find('input, select').each(function () {
                    $(this).prop('disabled', false);
                });
                $block.find('[data-disabled]').each(function () {
                    visibilityBlock($(this), true, true);
                });
                break;
        }
    }
</script>