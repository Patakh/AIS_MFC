@model AisLogistics.App.Models.AdditionalForms.KBR.Federal.R26002Model
@{
}

<div id="additional-data-content">
    <div class="row g-3">
        <div class="col-8 mx-auto">
            <h5 class="my-2">Заявление представлено непосредственно заявителем</h5>
            <div class="row mb-3">
                <div class="col-12">
                    <div class="form-check">
                        <input asp-for="ApplicationProvidedTypeId" id="ApplicationProvidedTypeId1" class="form-check-input" type="radio" value="1">
                        <label for="ApplicationProvidedTypeId1" class="form-check-label">в регистрирующий орган</label>
                    </div>

                    <div class="form-check">
                        <input asp-for="ApplicationProvidedTypeId" id="ApplicationProvidedTypeId2" class="form-check-input" type="radio" value="2">
                        <label for="ApplicationProvidedTypeId2" class="form-check-label">в многофункционалънъій центр</label>
                    </div>
                </div>
            </div>

            <h5 class="my-2">Сведения о лице, засвидетельствовавшим подлинность подписи заявителя в нотариальном порядке</h5>
            <div class="row mb-3">
                <div class="col-12">
                    <h6 class="my-2">Лицом, засвидетельствовавшим подлинность подписи заявителя, является</h6>
                    <div class="form-check">
                        <input asp-for="PersonAuthenticatedSignatureTypeId" id="PersonAuthenticatedSignatureTypeId1" class="form-check-input" type="radio" value="1">
                        <label for="PersonAuthenticatedSignatureTypeId1" class="form-check-label">нотариус</label>
                    </div>
                    <div class="form-check">
                        <input asp-for="PersonAuthenticatedSignatureTypeId" id="PersonAuthenticatedSignatureTypeId2" class="form-check-input" type="radio" value="2">
                        <label for="PersonAuthenticatedSignatureTypeId2" class="form-check-label">
                            лицо, замещающее временно отсутствующего нотариуса
                        </label>
                    </div>
                    <div class="form-check">
                        <input asp-for="PersonAuthenticatedSignatureTypeId" id="PersonAuthenticatedSignatureTypeId3" class="form-check-input" type="radio" value="3">
                        <label for="PersonAuthenticatedSignatureTypeId3" class="form-check-label">
                            должностное лицо, уполномоченное на совершение нотариалъного действия
                        </label>
                    </div>

                    <div class="row mb-3">
                        <div class="col-12">
                            <label asp-for="PersonAuthenticatedSignatureINN" class="form-label">
                                ИНН лица, засвидетелъствовавтего подлинность подписи заявителя
                            </label>
                            <input asp-for="PersonAuthenticatedSignatureINN" class="form-control" type="text">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var additionalForm = $('#additional-data-content');

    $(function () {
        additionalForm.find('[type="radio"], input[type="checkbox"]').on('click', function () {
            togleFields();
        });

        additionalForm.find(".pickdate").datepicker({
            language: "ru",
            autoclose: true,
        }).inputmask("99.99.9999", { clearIncomplete: true, showMaskOnHover: false });

        togleFields();
    })

    function togleFields() {
        additionalForm.find('[checkBlock] input[type="radio"], [checkBlock] input[type="checkbox"]').each(function () {
            let $block = $(this).closest('[checkBlock]');

            if ($(this).is(':checked')) {
                visibilityBlock($block.find('[checkBlockBody]'), false, false);
            } else {
                visibilityBlock($block.find('[checkBlockBody]'), true, true);
            }
        })
    }

    function visibilityBlock($block, hide, isDisabled) {
        switch (hide) {
            case true:
                $block.hide();
                break;
            case false:
                $block.show();
                break;
        }

        switch (isDisabled) {
            case true:
                $block.find('input, select').each(function () {
                    $(this).prop('disabled', true);
                });
                break;
            case false:
                $block.find('input, select').each(function () {
                    $(this).prop('disabled', false);
                });
                $block.find('[data-disabled]').each(function () {
                    visibilityBlock($(this), true, true);
                });
                break;
        }
    }
</script>