@model _198_ReinstatementSeniorityModel

<div id="additional-data-content">
    <div class="row g-3">
        <div class="col-8 mx-auto">
            <div class="row mb-3">
                <div class="col-12">
                    <label asp-for="FIO" class="form-label">ФИО лица запрашивающего справку</label>
                    <input type="text" asp-for="FIO" class="form-control">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-8">
                    <label asp-for="PrevLastname" class="form-label">Прежняя фамилия</label>
                    <input type="text" asp-for="PrevLastname" class="form-control">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="DateChange">Дата смены</label>
                    <div class="input-group input-group-merge">
                        <span class="input-group-text">
                            <i class="bi bi-calendar3"></i>
                        </span>
                        <input asp-for="DateChange" type="text"
                               class="form-control pickdate">
                    </div>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col">
                    <label class="form-label" asp-for="Period">Период работы</label>
                    <input asp-for="Period" type="text" class="form-control">
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-12">
                    <label asp-for="Organizatioon" class="form-label"> название организации с указанием должности и подразделения (номер или название цеха, участка и т.д.</label>
                    <input type="text" asp-for="Organizatioon" class="form-control">
                </div>
            </div>

            <h5 class="my-2">Информация о членах семьи (для согласия на обработку ПД)</h5>
            <div id="FamilyMembersList" data-clone-list>
                @for (var i = 0; i < Model.FamilyMembersList.Length; i++)
                {
                    <div class="g-3" id="clone@(i)" data-id="@i" data-clone>
                        <hr />
                        <h6 class="my-2 title">Член семьи @(i + 1)</h6>
                        <div class="row mb-3 align-items-center">
                            <div class="col-3">
                                <label class="form-label" asp-for="FamilyMembersList[i].BirthDate">Дата рождения</label>
                                <div class="input-group input-group-merge">
                                    <span class="input-group-text">
                                        <i class="bi bi-calendar3"></i>
                                    </span>
                                    <input asp-for="FamilyMembersList[i].BirthDate" type="text"
                                           class="form-control pickdate">
                                </div>
                            </div>
                            <div class="col-1 mt-4">
                                <button type="button" class="btn btn-danger" onclick="blockRemove(this)"><i class="bi bi-trash"></i></button>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="row justify-content-center">
                <div class="col-2">
                    <button type="button" class="btn btn-primary" id="addFamilyMembers"><i class="bi bi-plus"></i></button>
                </div>
            </div>
            <hr />

        </div>
    </div>
</div>
<div id="originalBlock">
    <div class="g-3" id="FamilyMembers" data-id="" data-original>
        <hr />
        <h6 class="my-2 title">Член семьи 0</h6>
        <div class="row mb-3 align-items-center">
            <div class="col-3">
                <label class="form-label" asp-for="FamilyMembersList[0].BirthDate">Дата рождения</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text">
                        <i class="bi bi-calendar3"></i>
                    </span>
                    <input asp-for="FamilyMembersList[0].BirthDate" type="text"
                           class="form-control pickdate">
                </div>
            </div>
            <div class="col-1 mt-4">
                <button type="button" class="btn btn-danger" onclick="blockRemove(this)"><i class="bi bi-trash"></i></button>
            </div>
        </div>
    </div>
</div>
<script>
    var additionalForm = $('#additional-data-content');
    var originalBlock = $('#originalBlock');

    $(function () {

        originalBlock.find('[data-original]').each(function (_, item) {
            renameBlock($(item), 100, true);
            visibilityBlock($(item), true, true);
        });

        additionalForm.find("select.select2-search").each(function () {
            $(this).select2({
                //dropdownParent: $("#mainModal"),
            });
        });

        additionalForm.find('select.select2-nosearch').each(function () {
            $(this).select2({
                minimumResultsForSearch: Infinity,
            })

        });

        let options = { clearIncomplete: true, showMaskOnHover: false };

        additionalForm.find(".pickdate").datepicker({
            language: "ru",
            autoclose: true
        }).inputmask("99.99.9999", options);


        additionalForm.find('#addFamilyMembers').on('click', () => addForm('FamilyMembersList', 'FamilyMembers'));

        $('#Period').daterangepicker({
            startDate: '@DateTime.Now.AddMonths(-1)',
            endDate: '@DateTime.Now',
            autoApply: true,
            opens: 'center',
            locale: {
                format: 'DD.MM.YYYY',
                separator: ' по ',
                applyLabel: 'Применить',
                cancelLabel: 'Отмена',
                weekLabel: 'Нед.',
                customRangeLabel: 'Выбрать диапазон',
                daysOfWeek: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],
                monthNames: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
            },
            autoclose: true,
            language: 'ru',
        });

        additionalForm.find('[data-disabled]').each(function () {
            visibilityBlock($(this), true, true);
        });

        function addForm(cloneListId, originalId) { //Динамическое добавление Принимает (Куда Откуда)
            let $cloneList = additionalForm.find(`#${cloneListId}`);
            let $original = originalBlock.find(`#${originalId}`);
            let $cloneBlock = $original.clone(true);
            let indexId = $cloneList.find('[data-clone]').length;
            renameBlock($cloneBlock, indexId);
            blockInit($cloneBlock);
            $cloneList.append($cloneBlock);
        }

        function blockInit($block) {
            visibilityBlock($block, false, false);

            $block.find("input").each(function () {
                $(this).val("");
            });

            let options = { clearIncomplete: true, showMaskOnHover: false };

            $block.find(".pickdate").datepicker({
                language: "ru",
                autoclose: true
            }).inputmask("99.99.9999", options);

            $block.find('select.select2-nosearch').each(function () {
                $(this).select2({
                    minimumResultsForSearch: Infinity,
                })
            });

            $block.find("select.select2-search").each(function () {
                $(this).select2({
                    //dropdownParent: $("#mainModal"),
                });
            });
        }
    });

    function renameBlock($cloneBlock, indexId, initOriginal = false) {
        if (!initOriginal) {
            $cloneBlock.find('.title').text($cloneBlock.find('.title').text().replace(/\d+/, indexId + 1));
            $cloneBlock.attr("id", `${$cloneBlock.attr("id")}${indexId}`);
            $cloneBlock.attr('data-id', indexId);
            $cloneBlock.attr('data-clone', '');
            $cloneBlock.removeAttr('data-original');
        }

        $cloneBlock.find('input, select, div').each(function () {
            $(this).attr('id', $(this).attr('id')?.replace(/\d+/, indexId));
            if ($(this).is('[name]')) {
                $(this).attr('name', $(this).attr('name').replace(/\d+/, indexId));
            }
        });

        $cloneBlock.find('label').each(function () {
            $(this).attr('for', $(this).attr('for').replace(/\d+/, indexId));
        });
    }

    function blockRemove(el) {
        let $cloneList = $(el).closest('[data-clone-list]');
        el.closest('[data-clone]').remove();
        $cloneList.find('[data-clone]').each(function (index, item) {
            renameBlock($(item), index);
        });
    }

    function visibilityBlock($block, hide, isDisabled) {
        switch (hide) {
            case true:
                $block.hide();
                break;
            case false:
                $block.show();
                break;
        }

        switch (isDisabled) {
            case true:
                $block.find('input, select').each(function () {
                    $(this).prop('disabled', true);
                });
                break;
            case false:
                $block.find('input, select').each(function () {
                    $(this).prop('disabled', false);
                });
                $block.find('[data-disabled]').each(function () {
                    visibilityBlock($(this), true, true);
                });
                break;
        }
    }
</script>
