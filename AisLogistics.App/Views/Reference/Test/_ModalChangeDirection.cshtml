@model AisLogistics.DataLayer.Common.Dto.Reference.TestDirectionModelDto
@{
   
}
<form asp-controller="Reference" asp-action="DirectionsSave" id="sendingForm" method="post" role="form">
    <div class="form-body pt-1">
        <fieldset>
            @Html.HiddenFor(m => m.Id)

            <div class="row">
                <div class="col-12 mb-3">
                    <label class="form-label" asp-for="DirectionName">Наименование</label>
                    <input type="text" asp-for="DirectionName" maxlength="255" class="form-control" placeholder="Наименование">
                </div>
            </div>

            <div class="row">
                <div class="col-12 mb-3">
                    <label class="form-label" asp-for="STestDirectionJobsId">Должности</label>
                    <select asp-for="STestDirectionJobsId" asp-items="@ViewBag.Jobs" class="form-control" placeholder="Выберите должность">
                        <option  value="0">Все</option>
                    </select>
                </div>
            </div>
        </fieldset>
    </div>
</form>

<script>

    $('#STestDirectionJobsId').select2({
        placeholder: "Выберите должность",
        dropdownParent: $('#mainModal'),
    });


    //document.querySelectorAll('#sendingForm select').forEach(item => {
    //    if (item.classList.contains('no-search')) {
    //        $(item).select2({ 
    //            dropdownParent: 
    //            $('#mainModal'), 
    //            minimumResultsForSearch: -1 });
    //        return;
    //    }
    //    $(item).select2({ dropdownParent: $('#mainModal') });
    //});

    $(document).ready(function () {
        const fv = FormValidation.formValidation(document.getElementById('sendingForm'),
            {
                fields: {
                    DirectionName: {
                        validators: {
                            notEmpty: {
                                message: '@MessageDescription.FieldIsRequired'
                            }
                        }
                    },
                    STestDirectionJobsId: {
                        validators: {
                            notEmpty: {
                                message: '@MessageDescription.FieldIsRequired'
                            }
                        }
                    }
                },
                plugins: {
                    trigger: new FormValidation.plugins.Trigger(),
                    submitButton: new FormValidation.plugins.SubmitButton(),
                    bootstrap5: new FormValidation.plugins.Bootstrap5(),
                    autoFocus: new FormValidation.plugins.AutoFocus()
                }
            }).on('core.form.valid', function () {
                var $form = $("#sendingForm");
                $.ajax({
                    type: $form.attr('method'),
                    url: $form.attr('action'),
                    data: $form.serialize(),
                    dataType: 'json',
                    beforeSend: () => {
                        $form.spinnerBtn("start");
                    },
                    complete: () => {
                        $table.DataTable().ajax.reload(null, false);
                        $form.spinnerBtn("stop");
                        $("#mainModal").modal('hide');
                    }
                });
                return false;
            });
    });
</script>

